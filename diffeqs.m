function [sol] = diffeqs(t,iv)
    %% Initial conditions and global variables
    x=iv(1); % Extract horizontal position
    z=iv(2); % Extract vertical position
    V=iv(3); % Extract velocity of rocket
    theta=iv(4); % Extract angle between rocket's nose and horizontal
    mr=iv(5); % Extract total mass of rocket
    mA=iv(6); % Extract total mass of air
    v=iv(7); % Extract total volume of air
    
    global g0 gamma R pa rhoair rhow vB Cd cd Ab At p0 vAi mAi TAi mB;
    %% Additional factors (drag, etc)
    q=0.5*rhoair*V^2; % Dynamic pressure, always applies
    D=q*Cd*Ab; % Drag force on bottle, always applies
    if ~v<vB % If phases two or three... calculate pressure now for comparison in ifelse
        p_end=p0*(vAi/vB)^gamma;
        p=p_end*(mA/mAi)^gamma; % Calculate pressure
    end
    
    %% Phase 1: Water is providing thrust
    if v<vB % If air volume is still less than bottle volume...
        p=p0*(vAi/v)^gamma;
        F=2*cd*(p-pa)*At; % Calculate thrust
        dmdt=-cd*At*sqrt(2*rhow*(p-pa)); % Calculate change in rocket mass; water is exiting rocket
        dvdt=cd*At*sqrt((2/rhow)*(p0*((vAi/v)^gamma)-pa)); % Change in volume of air
        dAdt=0; % Change in mass of air; water is the only thing currently leaving rocket

    %% Phase 2: Pressurized air is providing thrust
    elseif p>pa % If internal air pressure is still higher than atmospheric pressure...
        T_end=TAi*(vAi/vB)^(gamma-1); % Temperature at end of phase one
        pcr=p*(2/(gamma+1))^(gamma/(gamma-1)); % Critical pressure
        rho=mA/vB; % Calculate the air density in the main bottle
        T=p/(rho*R); % Calculate the temperature of the air in the main bottle
        if pcr>pa % Choked flow
            pe=pcr; % Set exit pressure as critical pressure
            Te=(2/(gamma+1))*T; % Calculate exit temperature
            Ve=sqrt(gamma*R*Te); % Calculate exhaust velocity
            rhoe=pe/(R*Te); % Calculate air density at exit
        else
            pe=pa; % Set exit pressure as ambient pressure
            Me=sqrt((2/(gamma-1))*(((p/pa)^((gamma-1)/gamma))-1)); % Calculate mach number of exhaust
            Te=T*(1+((gamma-1)/2)*Me^2); % Calculate exit temperature
            Ve=Me*sqrt(gamma*R*Te); % Calculate exit velocity
            rhoe=pe/(R*Te); % Calculate air density at exit
        end
        dAdt=-cd*rhoe*At*Ve; % Change of air mass in bottle
        dmdt=dAdt; % Air is the only thing leaving rocket now, so dmdt=dAdt
        dvdt=0; % As the air's volume now equals the bottle's volume, dvdt=0
        F=-dAdt*Ve+(pe-pa)*At; % Calculate the thrust generated by the outflowing air

    %% Phase 3: Rocket follows ballistic trajectory
    else
        F=0; % No thrust generated
        dmdt=0; % No change in mass
        dvdt=0; % No change in air volume
        dAdt=0; % No change in air mass
    end
    
    %% Conditions that apply through all three phases
    if V<1 % Hold theta constant until V>1 m/s to account for presence of ramp
        dthetadt=0;
    else
        dthetadt=-(g0*cos(theta))/V; % Else: this at all times
    end
    dzdt=V*sin(theta); % Calculate the change in vertical position
    dxdt=V*cos(theta); % Calculate the change in horizontal position
    dVdt=(F-D-(mr*g0*sin(theta)))/mr; % Calculate the change in velocity

    %% Store solutions and return to main.m
    sol=zeros(7,1); % Allocate empty matrix for solutions
    sol(1)=dxdt; % Solve horizontal position
    sol(2)=dzdt; % Solve vertical position
    sol(3)=dVdt; % Solve velocity
    sol(4)=dthetadt; % Solve angle relative to horizontal
    sol(5)=dmdt; % Solve mass of rocket
    sol(6)=dAdt; % Solve mass of air in rocket
    sol(7)=dvdt; % Solve volume of air in rocket
end